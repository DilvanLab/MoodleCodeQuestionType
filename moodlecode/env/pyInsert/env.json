{
	"name": "Python code snippet",
	"action": {
        "grade": {
            "type": "docker",
    		"image": "mcl-py",
    		"copy": "*",
    		"copyTo": "/tmp/mclrun",
    		"commands": [
    			"touch feedback.txt && touch graded.txt", {
    				"cmd": "echo Input source code: && cat %answer.output.name && echo",
    				"output": ["log"]
    			}, {
    				"cmd": "cat %before.output.name %answer.output.name %after.output.name > code.py && cat code.py && echo",
    				"output": ["log"]
    			}, {
    				"cmd": "python code.py 2>&1",
    				"output": ["log"]
    			}, {
    				"cmd": "cat feedback.txt",
    				"output": ["log", "feedback"]
    			}, {
    				"cmd": "cat graded.txt",
    				"output": ["log", "output"]
    			}
    		]
        },
		"test": {
            "type": "docker",
    		"image": "mcl-py",
    		"copy": "*",
    		"copyTo": "/tmp/mclrun",
    		"commands": [
    			{
    				"cmd": "python %answer.output.name 2>&1",
    				"output": ["feedback"]
    			}
    		]
        }
	},
	"options": [{
		"type": "textarea",
		"id": "before",
		"name": "Insert before",
		"encode": "base64",
		"output": {
			"type": "file",
			"name": "before.py"
		}
	}, {
		"type": "textarea",
		"id": "after",
		"name": "Insert after",
		"encode": "base64",
		"output": {
			"type": "file",
			"name": "after.py"
		}
	}],
	"inputs": [{
		"type": "editor",
		"id": "answer",
		"default": "",
		"encode": "base64",
		"lang": "python",
		"output": {
			"type": "file",
			"name": "answer.py",
			"defaultName": "answer.py"
		}
	}],
	"validation": [{
		"id": "answer.output.name",
		"type": "replace",
		"exp": "/[^A-Za-z0-9.]/",
		"replace": ""
	}]
}
