{
    "name":"Grade Function",
    "action":{
        "grade":{
            "type":"docker",
            "image":"mcl-c",
            "copy":"*",
            "copyTo":"/tmp/mclrun",
            "commands":[
                {
                    "cmd":"echo Input source code: && cat %answer.output.name && echo",
                    "output":[
                        "log"
                    ]
                },
                "cat %answer.output.name | node ./grader/removemain.js > nomain.c",
                {
                    "cmd":"gcc -Wall -o program nomain.c %grader.output.name 2>&1",
                    "output":[
                        "log",
                        "feedback"
                    ]
                },
                "chmod 777 *",
                {
                    "cmd":"timeout 3 ./program",
                    "output":[
                        "log",
                        "output"
                    ]
                }
            ]
        },
        "test":{
            "type":"docker",
            "image":"mcl-c",
            "copy":"*",
            "copyTo":"/tmp/mclrun",
            "commands":[
                "rm -rf %grader.output.name env.json grader",
                {
                    "cmd":"gcc -Wall -o program *.c 2>&1",
                    "output":[
                        "feedback"
                    ]
                },
                "chmod 777 *",
                {
                    "cmd":"timeout 3 ./program",
                    "output":[
                        "feedback"
                    ]
                }
            ]
        }
    },
    "options":[
        {
            "type":"textarea",
            "id":"grader",
            "name":"Grader function",
            "encode":"base64",
            "output":{
                "type":"file",
                "name":"grader.c"
            }
        }
    ],
    "inputs":[
        {
            "type":"editor",
            "id":"answer",
            "name": "Answer",
            "default":"",
            "encode":"base64",
            "lang":"c_cpp",
            "output":{
                "type":"file",
                "name":"answer.c"
            }
        }
    ],
    "validation":[
        {
            "id":"answer.output.name",
            "type":"replace",
            "exp":"/[^A-Za-z0-9.]/",
            "replace":""
        }
    ]
}
