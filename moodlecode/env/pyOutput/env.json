{
	"name": "Python Output",
	"action": {
		"grade": {
			"type": "docker",
			"image": "mcl-py",
			"copy": "*",
			"copyTo": "/tmp/mclrun",
			"outputProcess": {
				"function": "resultCompare",
				"params": {
					"model": "expected.output.value",
					"response": "_output.output",
					"feedback": "feedback.output.value"
				}
			},
			"testCases": {
				"method": false
			},
			"commands": [{
				"cmd": "echo Input source code: && cat %answer.output.name && echo",
				"output": ["log"]
			},{
				"cmd": "cat %input.output.name | timeout 3 python %answer.output.name > _output.txt",
				"if:and": [{
					"a": "%output.selected",
					"operation": "=",
					"b": "std"
				}, {
					"a": "%input.output.type",
					"operation": "=",
					"b": "std"
				}],
				"output": [
					"log",
					"feedback"
				]
			}, {
				"cmd": "cat %input.output.name | timeout 3 python %answer.output.name && cat %output.value > _output.txt",
				"if:and": [{
					"a": "%output.selected",
					"operation": "=",
					"b": "file"
				}, {
					"a": "%input.output.type",
					"operation": "=",
					"b": "std"
				}],
				"output": [
					"log",
					"feedback"
				]
			}, {
				"cmd": "timeout 3 python %answer.output.name > _output.txt",
				"if:and": [{
					"a": "%output.selected",
					"operation": "=",
					"b": "std"
				}, {
					"a": "%input.output.type",
					"operation": "=",
					"b": "file"
				}],
				"output": [
					"log",
					"feedback"
				]
			}, {
				"cmd": "timeout 3 python %answer.output.name && cat %output.value > _output.txt",
				"if:and": [{
					"a": "%output.selected",
					"operation": "=",
					"b": "file"
				}, {
					"a": "%input.output.type",
					"operation": "=",
					"b": "file"
				}],
				"output": [
					"log"
				]
			}, {
				"cmd": "cat _output.txt",
				"output": [
					"log",
					"output"
				]
			}]
		},
		"test": {
			"type": "docker",
			"image": "mcl-py",
			"copy": "*",
			"copyTo": "/tmp/mclrun",
			"commands": [
				"touch %testoutput.value",
				"chmod 777 *",
				"rm -rf env.json grader",
				{
					"cmd": "cat %testinput.output.name | timeout 3 python %answer.output.name > _output.txt",
					"if:and": [{
						"a": "%testoutput.selected",
						"operation": "=",
						"b": "std"
					}, {
						"a": "%testinput.output.type",
						"operation": "=",
						"b": "std"
					}],
					"output": [
						"feedback"
					]
				}, {
					"cmd": "cat %testinput.output.name | timeout 3 python %answer.output.name && cat %testoutput.value > _output.txt",
					"if:and": [{
						"a": "%testoutput.selected",
						"operation": "=",
						"b": "file"
					}, {
						"a": "%testinput.output.type",
						"operation": "=",
						"b": "std"
					}],
					"output": [
						"feedback"
					]
				}, {
					"cmd": "timeout 3 python %answer.output.name > _output.txt",
					"if:and": [{
						"a": "%testoutput.selected",
						"operation": "=",
						"b": "std"
					}, {
						"a": "%testinput.output.type",
						"operation": "=",
						"b": "file"
					}],
					"output": [
						"feedback"
					]
				}, {
					"cmd": "timeout 3 python %answer.output.name && cat %testoutput.value > _output.txt",
					"if:and": [{
						"a": "%testoutput.selected",
						"operation": "=",
						"b": "file"
					}, {
						"a": "%testinput.output.type",
						"operation": "=",
						"b": "file"
					}],
					"output": [
						"feedback"
					]
				}, {
					"cmd": "cat _output.txt",
					"output": [
						"feedback"
					]
				}]
		}
	},
	"options": [{
		"type": "textarea",
		"id": "expected",
		"name": "Expected output",
		"encode": "base64",
		"output": {
			"type": "file",
			"name": "expected.txt"
		}
	}, {
		"type": "textarea",
		"id": "input",
		"name": "Program input",
		"encode": "base64",
		"output": {
			"type": "file",
			"name": "input.txt"
		}
	}, {
		"type": "textarea",
		"id": "feedback",
		"name": "Test case feedback",
		"default": "",
		"desc": "Feedback given if this testcase isn't 100% correct",
		"encode": "plain",
		"lang": "plain",
		"nofile": true,
		"output": {
			"value": ""
		}
	}],
	"inputs": [{
		"type": "editor",
		"id": "answer",
		"default": "",
		"encode": "base64",
		"lang": "python",
		"name": "Answer",
		"nofile": true,
		"output": {
			"type": "std",
			"name": "answer.py",
			"defaultName": "answer.py"
		}
	}, {
		"type": "editor",
		"id": "testinput",
		"name": "Test input",
		"desc": "Shown to the student when answering the question. Used for testing the program.",
		"default": "",
		"encode": "base64",
		"lang": "plain",
		"output": {
			"type": "std",
			"name": "Input"
		}
	}, {
		"type": "textselect",
		"id": "testoutput",
		"name": "Test output",
		"desc": "How the output from the program is read. File will read the file and cat to the student. Stdout will show the output from the program.",
		"encode": "plain",
		"value": "output.txt",
		"selected": "std",
		"hidden": true,
		"list": [
			{
				"label": "File",
				"value": "file"
			},
			{
				"label": "stdout",
				"value": "std"
			}
		]
	}],
	"validation": [{
		"id": "answer.output.name",
		"type": "replace",
		"exp": "/[^A-Za-z0-9.]/",
		"replace": ""
	}]
}
