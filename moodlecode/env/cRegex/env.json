{
	"name": "C Regex",
	"action": {
		"grade": {
			"type": "docker",
			"image": "mcl-c",
			"copy": "*",
			"copyTo": "/tmp/mclrun",
			"outputProcess": {
				"function": "regexCompare",
				"params": {
					"model": "expected.output.value",
					"response": "_output.output"
				}
			},
			"testCases": {
				"method": "lowest"
			},
			"commands": [{
					"cmd": "echo Input source code: && cat %answer.output.name && echo",
					"output": [
						"log"
					]
				}, {
					"cmd": "gcc -Wall -o program %answer.output.name 2>&1",
					"output": [
						"log",
						"feedback"
					]
				},
				"chmod 777 *", {
					"cmd": "echo Expected: && cat %expected.output.name",
					"output": [
						"log"
					]
				}, {
					"cmd": "cat %input.output.name | timeout 3 ./program > output.txt",
					"output": [
						"log"
					]
				}, {
					"cmd": "cat output.txt",
					"output": [
						"log",
						"output"
					]
				}
			]
		},
		"test": {
			"type": "docker",
			"image": "mcl-c",
			"copy": "*",
			"copyTo": "/tmp/mclrun",
			"commands": [
                {
					"cmd": "gcc -Wall -o program %answer.output.name 2>&1",
					"output": [
						"feedback"
					]
				},
				"chmod 777 *",
				"rm -rf %expected.output.name %input.output.name env.json grader",
                {
					"cmd": "echo Your test file output: && cat %testinput.output.name | timeout 3 ./program",
					"output": [
						"feedback"
					]
				}
			]
		}
	},
	"options": [{
		"type": "textarea",
		"id": "input",
		"name": "Program input",
		"encode": "base64",
		"output": {
			"type": "file",
			"name": "input.txt"
		}
	}, {
		"type": "regexlist",
		"id": "expected",
		"name": "Grades",
		"encode": "base64",
		"output": {
			"type": "json",
			"name": "regex.json"
		}
	}],
	"inputs": [{
		"type": "editor",
		"id": "answer",
		"name": "Answer",
		"default": "I2luY2x1ZGUgPHN0ZGlvLmg+DQoNCmludCBtYWluKCkgew0KICAgIHJldHVybiAwOw0KfQ==",
		"encode": "base64",
		"lang": "c_cpp",
		"output": {
			"type": "file",
			"name": "main.c",
			"defaultName": "main.c"
		}
	}, {
		"type": "editor",
		"id": "testinput",
		"name": "Test input",
		"default": "",
		"encode": "base64",
		"lang": "plain",
		"output": {
			"type": "file",
			"name": "Input"
		}
	}],
	"validation": [{
		"id": "answer.output.name",
		"type": "replace",
		"exp": "/[^A-Za-z0-9.]/",
		"replace": ""
	}]
}
