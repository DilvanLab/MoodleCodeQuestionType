{
  "name": "Default Expected Output for C",
  "action": {
    "type": "docker",
    "image": "mcl-c",
    "copy": "*",
    "copyTo": "/tmp/mclrun",
    "commands": [
      {
      	  "cmd": "echo Input source code: && cat %answer.output.name && echo",
      	  "output": ["log"]
      },
      {
          "cmd": "gcc -Wall -o program %answer.output.name 2>&1",
          "output": ["log", "feedback"]
      },
      "chmod 777 *",
      {
          "cmd": "echo Expected: && cat %expected.output.name",
          "output": ["log"]
      },
      {
          "cmd": "cat %input.output.name | ./program > output.txt",
          "output": ["log"]
      },
      {
          "cmd": "echo Your test file output: && cat %testinput.output.name | ./program",
          "output": ["log", "feedback"]
      },
      {
          "cmd": "echo Program ouput: && cat output.txt",
          "output": ["log"]
      },
      {
          "cmd": "cat output.txt | ./grader %expected.output.name 2>&1",
          "output": ["log", "output"]
      }
    ]
  },
  "options": [
    {
      "type": "textarea",
      "id": "expected",
      "name": "Expected output",
      "encode": "base64",
      "output": {
        "type": "file",
        "name": "expected.txt"
      }
    },
    {
      "type": "textarea",
      "id": "input",
      "name": "Program input",
      "encode": "base64",
      "output": {
        "type": "file",
        "name": "input.txt"
      }
    }
  ],
  "inputs": [
    {
      "type": "editor",
      "id": "answer",
      "default": "I2luY2x1ZGUgPHN0ZGlvLmg+DQoNCmludCBtYWluKCkgew0KICAgIHJldHVybiAwOw0KfQ==",
      "encode": "base64",
      "lang": "c_cpp",
      "output": {
        "type": "file",
        "name": "main.c",
        "defaultName": "main.c"
      }
    },
    {
      "type": "editor",
      "id": "testinput",
      "default": "",
      "encode": "base64",
      "lang": "plain",
      "output": {
        "type": "file",
        "name": "test.txt"
      }
    }
  ],
  "validation": [
    {
      "id": "answer.output.name",
      "type": "replace",
      "exp": "/[^A-Za-z0-9.]/",
      "replace": ""
    }
  ]
}
